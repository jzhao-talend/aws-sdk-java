{
  "authorizers" : { },
  "metadata" : {
    "apiVersion" : "2015-04-13",
    "endpointPrefix" : "codecommit",
    "jsonVersion" : "1.1",
    "protocol" : "json",
    "resultWrapped" : false,
    "serviceAbbreviation" : "CodeCommit",
    "serviceFullName" : "AWS CodeCommit",
    "signatureVersion" : "v4",
    "signingName" : "codecommit",
    "targetPrefix" : "CodeCommit_20150413",
    "uid" : "codecommit-2015-04-13",
    "xmlNamespace" : null
  },
  "operations" : {
    "BatchGetRepositories" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Returns information about one or more repositories.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNamesRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "MaximumRepositoryNamesExceededException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionIntegrityChecksFailedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyAccessDeniedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyDisabledException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyUnavailableException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "BatchGetRepositoriesInput",
        "xmlNamespace" : null
      },
      "name" : "BatchGetRepositories",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "BatchGetRepositoriesOutput"
      }
    },
    "CreateBranch" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Creates a new branch in a repository and points the branch to a commit.</p> <note> <p>Calling the create branch operation does not set a repository's default branch. To do this, call the update default branch operation.</p> </note>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "BranchNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "BranchNameExistsException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidBranchNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "CommitIdRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "CommitDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidCommitIdException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionIntegrityChecksFailedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyAccessDeniedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyDisabledException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyUnavailableException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "CreateBranchInput",
        "xmlNamespace" : null
      },
      "name" : "CreateBranch",
      "output" : null
    },
    "CreateRepository" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Creates a new, empty repository.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNameExistsException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryDescriptionException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryLimitExceededException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionIntegrityChecksFailedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyAccessDeniedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyDisabledException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyUnavailableException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "CreateRepositoryInput",
        "xmlNamespace" : null
      },
      "name" : "CreateRepository",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "CreateRepositoryOutput"
      }
    },
    "DeleteRepository" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Deletes a repository. If a specified repository was already deleted, a null repository ID will be returned.</p> <important><p>Deleting a repository also deletes all associated objects and metadata. After a repository is deleted, all future push calls to the deleted repository will fail.</p> </important>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionIntegrityChecksFailedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyAccessDeniedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyDisabledException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyUnavailableException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "DeleteRepositoryInput",
        "xmlNamespace" : null
      },
      "name" : "DeleteRepository",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "DeleteRepositoryOutput"
      }
    },
    "GetBlob" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Returns the base-64 encoded content of an individual blob within a repository.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "BlobIdRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidBlobIdException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "BlobIdDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionIntegrityChecksFailedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyAccessDeniedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyDisabledException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyUnavailableException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "FileTooLargeException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "GetBlobInput",
        "xmlNamespace" : null
      },
      "name" : "GetBlob",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "GetBlobOutput"
      }
    },
    "GetBranch" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Returns information about a repository branch, including its name and the last commit ID.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "BranchNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidBranchNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "BranchDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionIntegrityChecksFailedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyAccessDeniedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyDisabledException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyUnavailableException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "GetBranchInput",
        "xmlNamespace" : null
      },
      "name" : "GetBranch",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "GetBranchOutput"
      }
    },
    "GetCommit" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Returns information about a commit, including commit message and committer information.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "CommitIdRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidCommitIdException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "CommitIdDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionIntegrityChecksFailedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyAccessDeniedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyDisabledException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyUnavailableException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "GetCommitInput",
        "xmlNamespace" : null
      },
      "name" : "GetCommit",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "GetCommitOutput"
      }
    },
    "GetDifferences" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Returns information about the differences in a valid commit specifier (such as a branch, tag, HEAD, commit ID or other fully qualified reference). Results can be limited to a specified path.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidContinuationTokenException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidMaxResultsException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidCommitIdException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "CommitRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidCommitException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "CommitDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidPathException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "PathDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionIntegrityChecksFailedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyAccessDeniedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyDisabledException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyUnavailableException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "GetDifferencesInput",
        "xmlNamespace" : null
      },
      "name" : "GetDifferences",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "GetDifferencesOutput"
      }
    },
    "GetRepository" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Returns information about a repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionIntegrityChecksFailedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyAccessDeniedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyDisabledException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyUnavailableException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "GetRepositoryInput",
        "xmlNamespace" : null
      },
      "name" : "GetRepository",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "GetRepositoryOutput"
      }
    },
    "GetRepositoryTriggers" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Gets information about triggers configured for a repository.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionIntegrityChecksFailedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyAccessDeniedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyDisabledException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyUnavailableException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "GetRepositoryTriggersInput",
        "xmlNamespace" : null
      },
      "name" : "GetRepositoryTriggers",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "GetRepositoryTriggersOutput"
      }
    },
    "ListBranches" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Gets information about one or more branches in a repository.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionIntegrityChecksFailedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyAccessDeniedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyDisabledException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyUnavailableException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidContinuationTokenException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "ListBranchesInput",
        "xmlNamespace" : null
      },
      "name" : "ListBranches",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "ListBranchesOutput"
      }
    },
    "ListRepositories" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Gets information about one or more repositories.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidSortByException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidOrderException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidContinuationTokenException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "ListRepositoriesInput",
        "xmlNamespace" : null
      },
      "name" : "ListRepositories",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "ListRepositoriesOutput"
      }
    },
    "PutRepositoryTriggers" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Replaces all triggers for a repository. This can be used to create or delete triggers.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryTriggersListRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "MaximumRepositoryTriggersExceededException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryTriggerNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryTriggerDestinationArnException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryTriggerRegionException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryTriggerCustomDataException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "MaximumBranchesExceededException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryTriggerBranchNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryTriggerEventsException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryTriggerNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryTriggerDestinationArnRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryTriggerBranchNameListRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryTriggerEventsListRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionIntegrityChecksFailedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyAccessDeniedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyDisabledException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyUnavailableException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "PutRepositoryTriggersInput",
        "xmlNamespace" : null
      },
      "name" : "PutRepositoryTriggers",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "PutRepositoryTriggersOutput"
      }
    },
    "TestRepositoryTriggers" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Tests the functionality of repository triggers by sending information to the trigger target. If real data is available in the repository, the test will send data from the last commit. If no data is available, sample data will be generated.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryTriggersListRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "MaximumRepositoryTriggersExceededException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryTriggerNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryTriggerDestinationArnException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryTriggerRegionException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryTriggerCustomDataException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "MaximumBranchesExceededException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryTriggerBranchNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryTriggerEventsException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryTriggerNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryTriggerDestinationArnRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryTriggerBranchNameListRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryTriggerEventsListRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionIntegrityChecksFailedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyAccessDeniedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyDisabledException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyUnavailableException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "TestRepositoryTriggersInput",
        "xmlNamespace" : null
      },
      "name" : "TestRepositoryTriggers",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "TestRepositoryTriggersOutput"
      }
    },
    "UpdateDefaultBranch" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Sets or changes the default branch name for the specified repository.</p> <note> <p>If you use this operation to change the default branch name to the current default branch name, a success message is returned even though the default branch did not change.</p> </note>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "BranchNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidBranchNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "BranchDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionIntegrityChecksFailedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyAccessDeniedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyDisabledException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyUnavailableException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "UpdateDefaultBranchInput",
        "xmlNamespace" : null
      },
      "name" : "UpdateDefaultBranch",
      "output" : null
    },
    "UpdateRepositoryDescription" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Sets or changes the comment or description for a repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryNameException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryDescriptionException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionIntegrityChecksFailedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyAccessDeniedException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyDisabledException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EncryptionKeyUnavailableException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "UpdateRepositoryDescriptionInput",
        "xmlNamespace" : null
      },
      "name" : "UpdateRepositoryDescription",
      "output" : null
    },
    "UpdateRepositoryName" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Renames a repository. The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. The suffix \".git\" is prohibited. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryDoesNotExistException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNameExistsException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNameRequiredException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidRepositoryNameException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "UpdateRepositoryNameInput",
        "xmlNamespace" : null
      },
      "name" : "UpdateRepositoryName",
      "output" : null
    }
  },
  "shapes" : {
    "AccountId" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "AdditionalData" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "Arn" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "BatchGetRepositoriesInput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a batch get repositories operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "repositoryNames" : {
          "deprecated" : false,
          "documentation" : "<p>The names of the repositories to get information about.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryNameList",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryNames" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "BatchGetRepositoriesOutput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a batch get repositories operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "repositories" : {
          "deprecated" : false,
          "documentation" : "<p>A list of repositories returned by the batch get repositories operation.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryMetadataList",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoriesNotFound" : {
          "deprecated" : false,
          "documentation" : "<p>Returns a list of repository names for which information could not be found.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryNotFoundList",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "BlobIdDoesNotExistException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified blob does not exist.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "BlobIdRequiredException" : {
      "deprecated" : false,
      "documentation" : "<p>A blob ID is required but was not specified.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "BlobMetadata" : {
      "deprecated" : false,
      "documentation" : "<p>Returns information about a specific Git blob object.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "blobId" : {
          "deprecated" : false,
          "documentation" : "<p>The full ID of the blob.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ObjectId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "mode" : {
          "deprecated" : false,
          "documentation" : "<p>The file mode permissions of the blob. File mode permission codes include:</p> <ul> <li> <p> <code>100644</code> indicates read/write</p> </li> <li> <p> <code>100755</code> indicates read/write/execute</p> </li> <li> <p> <code>160000</code> indicates a submodule</p> </li> <li> <p> <code>120000</code> indicates a symlink</p> </li> </ul>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Mode",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "path" : {
          "deprecated" : false,
          "documentation" : "<p>The path to the blob and any associated file name, if any.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Path",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "BranchDoesNotExistException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified branch does not exist.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "BranchInfo" : {
      "deprecated" : false,
      "documentation" : "<p>Returns information about a branch.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "branchName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the branch.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "BranchName",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "commitId" : {
          "deprecated" : false,
          "documentation" : "<p>The ID of the last commit made to the branch.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "CommitId",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "BranchName" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 100,
      "member" : null,
      "members" : { },
      "min" : 1,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "BranchNameExistsException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified branch name already exists.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "BranchNameList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "BranchName",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "BranchNameRequiredException" : {
      "deprecated" : false,
      "documentation" : "<p>A branch name is required but was not specified.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "ChangeTypeEnum" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : [ "A", "M", "D" ],
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "CloneUrlHttp" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "CloneUrlSsh" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "Commit" : {
      "deprecated" : false,
      "documentation" : "<p>Returns information about a specific commit.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "additionalData" : {
          "deprecated" : false,
          "documentation" : "<p>Any additional data associated with the specified commit.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "AdditionalData",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "author" : {
          "deprecated" : false,
          "documentation" : "<p>Information about the author of the specified commit. Information includes the date in timestamp format with GMT offset, the name of the author, and the email address for the author, as configured in Git.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "UserInfo",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "committer" : {
          "deprecated" : false,
          "documentation" : "<p>Information about the person who committed the specified commit, also known as the committer. Information includes the date in timestamp format with GMT offset, the name of the committer, and the email address for the committer, as configured in Git.</p> <p>For more information about the difference between an author and a committer in Git, see <a href=\"http://git-scm.com/book/ch2-3.html\">Viewing the Commit History</a> in Pro Git by Scott Chacon and Ben Straub.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "UserInfo",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "message" : {
          "deprecated" : false,
          "documentation" : "<p>The commit message associated with the specified commit.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Message",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "parents" : {
          "deprecated" : false,
          "documentation" : "<p>The parent list for the specified commit.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ParentList",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "treeId" : {
          "deprecated" : false,
          "documentation" : "<p>Tree information for the specified commit.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ObjectId",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "CommitDoesNotExistException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified commit does not exist or no commit was specified, and the specified repository has no default branch.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "CommitId" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "CommitIdDoesNotExistException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified commit ID does not exist.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "CommitIdRequiredException" : {
      "deprecated" : false,
      "documentation" : "<p>A commit ID was not specified.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "CommitName" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "CommitRequiredException" : {
      "deprecated" : false,
      "documentation" : "<p>A commit was not specified.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "CreateBranchInput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a create branch operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "branchName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the new branch to create.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "BranchName",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "commitId" : {
          "deprecated" : false,
          "documentation" : "<p>The ID of the commit to point the new branch to.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "CommitId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository in which you want to create the new branch.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName", "branchName", "commitId" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "CreateRepositoryInput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a create repository operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "repositoryDescription" : {
          "deprecated" : false,
          "documentation" : "<p>A comment or description about the new repository.</p> <note> <p>The description field for a repository accepts all HTML characters and all valid Unicode characters. Applications that do not HTML-encode the description and display it in a web page could expose users to potentially malicious code. Make sure that you HTML-encode the description field in any application that uses this API to display the repository description on a web page.</p> </note>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryDescription",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the new repository to be created.</p> <note> <p>The repository name must be unique across the calling AWS account. In addition, repository names are limited to 100 alphanumeric, dash, and underscore characters, and cannot include certain characters. For a full description of the limits on repository names, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">Limits</a> in the AWS CodeCommit User Guide. The suffix \".git\" is prohibited.</p> </note>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "CreateRepositoryOutput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a create repository operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "repositoryMetadata" : {
          "deprecated" : false,
          "documentation" : "<p>Information about the newly created repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryMetadata",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "CreationDate" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "timestamp",
      "value" : null,
      "wrapper" : false
    },
    "Date" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "DeleteRepositoryInput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a delete repository operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to delete.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "DeleteRepositoryOutput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a delete repository operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "repositoryId" : {
          "deprecated" : false,
          "documentation" : "<p>The ID of the repository that was deleted.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryId",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "Difference" : {
      "deprecated" : false,
      "documentation" : "<p>Returns information about a set of differences for a commit specifier.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "afterBlob" : {
          "deprecated" : false,
          "documentation" : "<p>Information about an <code>afterBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "BlobMetadata",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "beforeBlob" : {
          "deprecated" : false,
          "documentation" : "<p>Information about a <code>beforeBlob</code> data type object, including the ID, the file mode permission code, and the path.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "BlobMetadata",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "changeType" : {
          "deprecated" : false,
          "documentation" : "<p>Whether the change type of the difference is an addition (A), deletion (D), or modification (M).</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ChangeTypeEnum",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "DifferenceList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "Difference",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "Email" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "EncryptionIntegrityChecksFailedException" : {
      "deprecated" : false,
      "documentation" : "<p>An encryption integrity check failed.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : true,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "EncryptionKeyAccessDeniedException" : {
      "deprecated" : false,
      "documentation" : "<p>An encryption key could not be accessed.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "EncryptionKeyDisabledException" : {
      "deprecated" : false,
      "documentation" : "<p>The encryption key is disabled.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "EncryptionKeyNotFoundException" : {
      "deprecated" : false,
      "documentation" : "<p>No encryption key was found.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "EncryptionKeyUnavailableException" : {
      "deprecated" : false,
      "documentation" : "<p>The encryption key is not available.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "FileTooLargeException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified file exceeds the file size limit for AWS CodeCommit. For more information about limits in AWS CodeCommit, see <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/limits.html\">AWS CodeCommit User Guide</a>.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "GetBlobInput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a get blob operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "blobId" : {
          "deprecated" : false,
          "documentation" : "<p>The ID of the blob, which is its SHA-1 pointer.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ObjectId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that contains the blob.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName", "blobId" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "GetBlobOutput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a get blob operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "content" : {
          "deprecated" : false,
          "documentation" : "<p>The content of the blob, usually a file.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "blob",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "content" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "GetBranchInput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a get branch operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "branchName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the branch for which you want to retrieve information.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "BranchName",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that contains the branch for which you want to retrieve information.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "GetBranchOutput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a get branch operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "branch" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the branch.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "BranchInfo",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "GetCommitInput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a get commit operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "commitId" : {
          "deprecated" : false,
          "documentation" : "<p>The commit ID.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ObjectId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to which the commit was made.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName", "commitId" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "GetCommitOutput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a get commit operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "commit" : {
          "deprecated" : false,
          "documentation" : "<p>A commit data type object that contains information about the specified commit.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Commit",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "commit" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "GetDifferencesInput" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "MaxResults" : {
          "deprecated" : false,
          "documentation" : "<p>A non-negative integer used to limit the number of returned results.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Limit",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "NextToken" : {
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that when provided in a request, returns the next batch of the results.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "NextToken",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "afterCommitSpecifier" : {
          "deprecated" : false,
          "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "CommitName",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "afterPath" : {
          "deprecated" : false,
          "documentation" : "<p>The file path in which to check differences. Limits the results to this path. Can also be used to specify the changed name of a directory or folder, if it has changed. If not specified, differences will be shown for all paths.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Path",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "beforeCommitSpecifier" : {
          "deprecated" : false,
          "documentation" : "<p>The branch, tag, HEAD, or other fully qualified reference used to identify a commit. For example, the full commit ID. Optional. If not specified, all changes prior to the <code>afterCommitSpecifier</code> value will be shown. If you do not use <code>beforeCommitSpecifier</code> in your request, consider limiting the results with <code>maxResults</code>.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "CommitName",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "beforePath" : {
          "deprecated" : false,
          "documentation" : "<p>The file path in which to check for differences. Limits the results to this path. Can also be used to specify the previous name of a directory or folder. If <code>beforePath</code> and <code>afterPath</code> are not specified, differences will be shown for all paths.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Path",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository where you want to get differences.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName", "afterCommitSpecifier" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "GetDifferencesOutput" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "NextToken" : {
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that can be used in a request to return the next batch of the results.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "NextToken",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "differences" : {
          "deprecated" : false,
          "documentation" : "<p>A differences data type object that contains information about the differences, including whether the difference is added, modified, or deleted (A, D, M).</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "DifferenceList",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "GetRepositoryInput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a get repository operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to get information about.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "GetRepositoryOutput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a get repository operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "repositoryMetadata" : {
          "deprecated" : false,
          "documentation" : "<p>Information about the repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryMetadata",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "GetRepositoryTriggersInput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a get repository triggers operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository for which the trigger is configured.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "GetRepositoryTriggersOutput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a get repository triggers operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "configurationId" : {
          "deprecated" : false,
          "documentation" : "<p>The system-generated unique ID for the trigger.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryTriggersConfigurationId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "triggers" : {
          "deprecated" : false,
          "documentation" : "<p>The JSON block of configuration information for each trigger.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryTriggersList",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidBlobIdException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified blob is not valid.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidBranchNameException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified branch name is not valid.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidCommitException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified commit is not valid.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidCommitIdException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified commit ID is not valid.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidContinuationTokenException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified continuation token is not valid.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidMaxResultsException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified number of maximum results is not valid.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidOrderException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified sort order is not valid.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidPathException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified path is not valid.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidRepositoryDescriptionException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified repository description is not valid.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidRepositoryNameException" : {
      "deprecated" : false,
      "documentation" : "<p>At least one specified repository name is not valid.</p> <note> <p>This exception only occurs when a specified repository name is not valid. Other exceptions occur when a required repository parameter is missing, or when a specified repository does not exist.</p> </note>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidRepositoryTriggerBranchNameException" : {
      "deprecated" : false,
      "documentation" : "<p>One or more branch names specified for the trigger is not valid.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidRepositoryTriggerCustomDataException" : {
      "deprecated" : false,
      "documentation" : "<p>The custom data provided for the trigger is not valid.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidRepositoryTriggerDestinationArnException" : {
      "deprecated" : false,
      "documentation" : "<p>The Amazon Resource Name (ARN) for the trigger is not valid for the specified destination. The most common reason for this error is that the ARN does not meet the requirements for the service type.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidRepositoryTriggerEventsException" : {
      "deprecated" : false,
      "documentation" : "<p>One or more events specified for the trigger is not valid. Check to make sure that all events specified match the requirements for allowed events.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidRepositoryTriggerNameException" : {
      "deprecated" : false,
      "documentation" : "<p>The name of the trigger is not valid.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidRepositoryTriggerRegionException" : {
      "deprecated" : false,
      "documentation" : "<p>The region for the trigger target does not match the region for the repository. Triggers must be created in the same region as the target for the trigger.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidSortByException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified sort by value is not valid.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "LastModifiedDate" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "timestamp",
      "value" : null,
      "wrapper" : false
    },
    "Limit" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "integer",
      "value" : null,
      "wrapper" : false
    },
    "ListBranchesInput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a list branches operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "nextToken" : {
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that allows the operation to batch the results.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "NextToken",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that contains the branches.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "ListBranchesOutput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a list branches operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "branches" : {
          "deprecated" : false,
          "documentation" : "<p>The list of branch names.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "BranchNameList",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "nextToken" : {
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that returns the batch of the results.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "NextToken",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "ListRepositoriesInput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a list repositories operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "nextToken" : {
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "NextToken",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "order" : {
          "deprecated" : false,
          "documentation" : "<p>The order in which to sort the results of a list repositories operation.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "OrderEnum",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "sortBy" : {
          "deprecated" : false,
          "documentation" : "<p>The criteria used to sort the results of a list repositories operation.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "SortByEnum",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "ListRepositoriesOutput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a list repositories operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "nextToken" : {
          "deprecated" : false,
          "documentation" : "<p>An enumeration token that allows the operation to batch the results of the operation. Batch sizes are 1,000 for list repository operations. When the client sends the token back to AWS CodeCommit, another page of 1,000 records is retrieved.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "NextToken",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositories" : {
          "deprecated" : false,
          "documentation" : "<p>Lists the repositories called by the list repositories operation.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryNameIdPairList",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "MaximumBranchesExceededException" : {
      "deprecated" : false,
      "documentation" : "<p>The number of branches for the trigger was exceeded.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "MaximumRepositoryNamesExceededException" : {
      "deprecated" : false,
      "documentation" : "<p>The maximum number of allowed repository names was exceeded. Currently, this number is 25.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "MaximumRepositoryTriggersExceededException" : {
      "deprecated" : false,
      "documentation" : "<p>The number of triggers allowed for the repository was exceeded.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "Message" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "Mode" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "Name" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "NextToken" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "ObjectId" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "OrderEnum" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : [ "ascending", "descending" ],
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "ParentList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "ObjectId",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "Path" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "PathDoesNotExistException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified path does not exist.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "PutRepositoryTriggersInput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the input ofa put repository triggers operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository where you want to create or update the trigger.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "triggers" : {
          "deprecated" : false,
          "documentation" : "<p>The JSON block of configuration information for each trigger.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryTriggersList",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName", "triggers" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "PutRepositoryTriggersOutput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a put repository triggers operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "configurationId" : {
          "deprecated" : false,
          "documentation" : "<p>The system-generated unique ID for the create or update operation.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryTriggersConfigurationId",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryDescription" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 1000,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryDoesNotExistException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified repository does not exist.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryId" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryLimitExceededException" : {
      "deprecated" : false,
      "documentation" : "<p>A repository resource limit was exceeded.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryMetadata" : {
      "deprecated" : false,
      "documentation" : "<p>Information about a repository.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "Arn" : {
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) of the repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Arn",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "accountId" : {
          "deprecated" : false,
          "documentation" : "<p>The ID of the AWS account associated with the repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "AccountId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "cloneUrlHttp" : {
          "deprecated" : false,
          "documentation" : "<p>The URL to use for cloning the repository over HTTPS.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "CloneUrlHttp",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "cloneUrlSsh" : {
          "deprecated" : false,
          "documentation" : "<p>The URL to use for cloning the repository over SSH.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "CloneUrlSsh",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "creationDate" : {
          "deprecated" : false,
          "documentation" : "<p>The date and time the repository was created, in timestamp format.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "CreationDate",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "defaultBranch" : {
          "deprecated" : false,
          "documentation" : "<p>The repository's default branch name.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "BranchName",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "lastModifiedDate" : {
          "deprecated" : false,
          "documentation" : "<p>The date and time the repository was last modified, in timestamp format.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "LastModifiedDate",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryDescription" : {
          "deprecated" : false,
          "documentation" : "<p>A comment or description about the repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryDescription",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryId" : {
          "deprecated" : false,
          "documentation" : "<p>The ID of the repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The repository's name.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryMetadataList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "RepositoryMetadata",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryName" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 100,
      "member" : null,
      "members" : { },
      "min" : 1,
      "pattern" : "[\\w\\.-]+",
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryNameExistsException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified repository name already exists.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryNameIdPair" : {
      "deprecated" : false,
      "documentation" : "<p>Information about a repository name and ID.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "repositoryId" : {
          "deprecated" : false,
          "documentation" : "<p>The ID associated with the repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name associated with the repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryNameIdPairList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "RepositoryNameIdPair",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryNameList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "RepositoryName",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryNameRequiredException" : {
      "deprecated" : false,
      "documentation" : "<p>A repository name is required but was not specified.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryNamesRequiredException" : {
      "deprecated" : false,
      "documentation" : "<p>A repository names object is required but was not specified.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryNotFoundList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "RepositoryName",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryTrigger" : {
      "deprecated" : false,
      "documentation" : "<p>Information about a trigger for a repository.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "branches" : {
          "deprecated" : false,
          "documentation" : "<p>The branches that will be included in the trigger configuration. If no branches are specified, the trigger will apply to all branches.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "BranchNameList",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "customData" : {
          "deprecated" : false,
          "documentation" : "<p>Any custom data associated with the trigger that will be included in the information sent to the target of the trigger.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryTriggerCustomData",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "destinationArn" : {
          "deprecated" : false,
          "documentation" : "<p>The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Arn",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "events" : {
          "deprecated" : false,
          "documentation" : "<p>The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). </p> <note> <p>The valid value \"all\" cannot be used with any other values.</p> </note>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryTriggerEventList",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "name" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the trigger.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryTriggerName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "name", "destinationArn", "events" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryTriggerBranchNameListRequiredException" : {
      "deprecated" : false,
      "documentation" : "<p>At least one branch name is required but was not specified in the trigger configuration.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryTriggerCustomData" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryTriggerDestinationArnRequiredException" : {
      "deprecated" : false,
      "documentation" : "<p>A destination ARN for the target service for the trigger is required but was not specified.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryTriggerEventEnum" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : [ "all", "updateReference", "createReference", "deleteReference" ],
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryTriggerEventList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "RepositoryTriggerEventEnum",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryTriggerEventsListRequiredException" : {
      "deprecated" : false,
      "documentation" : "<p>At least one event for the trigger is required but was not specified.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryTriggerExecutionFailure" : {
      "deprecated" : false,
      "documentation" : "<p>A trigger failed to run.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "failureMessage" : {
          "deprecated" : false,
          "documentation" : "<p>Additional message information about the trigger that did not run.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryTriggerExecutionFailureMessage",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "trigger" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the trigger that did not run.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryTriggerName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryTriggerExecutionFailureList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "RepositoryTriggerExecutionFailure",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryTriggerExecutionFailureMessage" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryTriggerName" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryTriggerNameList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "RepositoryTriggerName",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryTriggerNameRequiredException" : {
      "deprecated" : false,
      "documentation" : "<p>A name for the trigger is required but was not specified.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryTriggersConfigurationId" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryTriggersList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "RepositoryTrigger",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryTriggersListRequiredException" : {
      "deprecated" : false,
      "documentation" : "<p>The list of triggers for the repository is required but was not specified.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "SortByEnum" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : [ "repositoryName", "lastModifiedDate" ],
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "TestRepositoryTriggersInput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the input of a test repository triggers operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository in which to test the triggers.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "triggers" : {
          "deprecated" : false,
          "documentation" : "<p>The list of triggers to test.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryTriggersList",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName", "triggers" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "TestRepositoryTriggersOutput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the output of a test repository triggers operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "failedExecutions" : {
          "deprecated" : false,
          "documentation" : "<p>The list of triggers that were not able to be tested. This list provides the names of the triggers that could not be tested, separated by commas.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryTriggerExecutionFailureList",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "successfulExecutions" : {
          "deprecated" : false,
          "documentation" : "<p>The list of triggers that were successfully tested. This list provides the names of the triggers that were successfully tested, separated by commas.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryTriggerNameList",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "UpdateDefaultBranchInput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the input of an update default branch operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "defaultBranchName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the branch to set as the default.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "BranchName",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to set or change the default branch for.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName", "defaultBranchName" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "UpdateRepositoryDescriptionInput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the input of an update repository description operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "repositoryDescription" : {
          "deprecated" : false,
          "documentation" : "<p>The new comment or description for the specified repository. Repository descriptions are limited to 1,000 characters.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryDescription",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to set or change the comment or description for.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "UpdateRepositoryNameInput" : {
      "deprecated" : false,
      "documentation" : "<p>Represents the input of an update repository description operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "newName" : {
          "deprecated" : false,
          "documentation" : "<p>The new name for the repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "oldName" : {
          "deprecated" : false,
          "documentation" : "<p>The existing name of the repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "oldName", "newName" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "UserInfo" : {
      "deprecated" : false,
      "documentation" : "<p>Information about the user who made a specified commit.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "date" : {
          "deprecated" : false,
          "documentation" : "<p>The date when the specified commit was pushed to the repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Date",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "email" : {
          "deprecated" : false,
          "documentation" : "<p>The email address associated with the user who made the commit, if any.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Email",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "name" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the user who made the specified commit.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Name",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "blob" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "blob",
      "value" : null,
      "wrapper" : false
    }
  },
  "documentation" : "<fullname>AWS CodeCommit</fullname> <p>This is the <i>AWS CodeCommit API Reference</i>. This reference provides descriptions of the operations and data types for AWS CodeCommit API along with usage examples.</p> <p>You can use the AWS CodeCommit API to work with the following objects:</p> <p>Repositories, by calling the following:</p> <ul> <li> <p> <a>BatchGetRepositories</a>, which returns information about one or more repositories associated with your AWS account</p> </li> <li> <p> <a>CreateRepository</a>, which creates an AWS CodeCommit repository</p> </li> <li> <p> <a>DeleteRepository</a>, which deletes an AWS CodeCommit repository</p> </li> <li> <p> <a>GetRepository</a>, which returns information about a specified repository</p> </li> <li> <p> <a>ListRepositories</a>, which lists all AWS CodeCommit repositories associated with your AWS account</p> </li> <li> <p> <a>UpdateRepositoryDescription</a>, which sets or updates the description of the repository</p> </li> <li> <p> <a>UpdateRepositoryName</a>, which changes the name of the repository. If you change the name of a repository, no other users of that repository will be able to access it until you send them the new HTTPS or SSH URL to use.</p> </li> </ul> <p>Branches, by calling the following:</p> <ul> <li> <p> <a>CreateBranch</a>, which creates a new branch in a specified repository</p> </li> <li> <p> <a>GetBranch</a>, which returns information about a specified branch</p> </li> <li> <p> <a>ListBranches</a>, which lists all branches for a specified repository</p> </li> <li> <p> <a>UpdateDefaultBranch</a>, which changes the default branch for a repository</p> </li> </ul> <p>Information about committed code in a repository, by calling the following:</p> <ul> <li> <p> <a>GetBlob</a>, which returns the base-64 encoded content of an individual Git blob object within a repository</p> </li> <li> <p> <a>GetCommit</a>, which returns information about a commit, including commit messages and author and committer information</p> </li> <li> <p> <a>GetDifferences</a>, which returns information about the differences in a valid commit specifier (such as a branch, tag, HEAD, commit ID or other fully qualified reference)</p> </li> </ul> <p>Triggers, by calling the following:</p> <ul> <li> <p> <a>GetRepositoryTriggers</a>, which returns information about triggers configured for a repository</p> </li> <li> <p> <a>PutRepositoryTriggers</a>, which replaces all triggers for a repository and can be used to create or delete triggers</p> </li> <li> <p> <a>TestRepositoryTriggers</a>, which tests the functionality of a repository trigger by sending data to the trigger target</p> </li> </ul> <p>For information about how to use AWS CodeCommit, see the <a href=\"http://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html\">AWS CodeCommit User Guide</a>.</p>"
}