{
  "authorizers" : { },
  "metadata" : {
    "apiVersion" : "2015-09-21",
    "endpointPrefix" : "ecr",
    "jsonVersion" : "1.1",
    "protocol" : "json",
    "resultWrapped" : false,
    "serviceAbbreviation" : "Amazon ECR",
    "serviceFullName" : "Amazon EC2 Container Registry",
    "signatureVersion" : "v4",
    "signingName" : "ecr",
    "targetPrefix" : "AmazonEC2ContainerRegistry_V20150921",
    "uid" : "ecr-2015-09-21",
    "xmlNamespace" : null
  },
  "operations" : {
    "BatchCheckLayerAvailability" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Check the availability of multiple image layers in a specified registry and repository.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidParameterException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ServerException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "BatchCheckLayerAvailabilityRequest",
        "xmlNamespace" : null
      },
      "name" : "BatchCheckLayerAvailability",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "BatchCheckLayerAvailabilityResponse"
      }
    },
    "BatchDeleteImage" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Deletes a list of specified images within a specified repository. Images are specified with either <code>imageTag</code> or <code>imageDigest</code>.</p> <p>You can remove a tag from an image by specifying the image's tag in your request. When you remove the last tag from an image, the image is deleted from your repository.</p> <p>You can completely delete an image (and all of its tags) by specifying the image's digest in your request.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ServerException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidParameterException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNotFoundException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "BatchDeleteImageRequest",
        "xmlNamespace" : null
      },
      "name" : "BatchDeleteImage",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "BatchDeleteImageResponse"
      }
    },
    "BatchGetImage" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Gets detailed information for specified images within a specified repository. Images are specified with either <code>imageTag</code> or <code>imageDigest</code>.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ServerException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidParameterException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNotFoundException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "BatchGetImageRequest",
        "xmlNamespace" : null
      },
      "name" : "BatchGetImage",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "BatchGetImageResponse"
      }
    },
    "CompleteLayerUpload" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Inform Amazon ECR that the image layer upload for a specified registry, repository name, and upload ID, has completed. You can optionally provide a <code>sha256</code> digest of the image layer for data validation purposes.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ServerException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidParameterException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "UploadNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidLayerException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "LayerPartTooSmallException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "LayerAlreadyExistsException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "EmptyUploadException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "CompleteLayerUploadRequest",
        "xmlNamespace" : null
      },
      "name" : "CompleteLayerUpload",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "CompleteLayerUploadResponse"
      }
    },
    "CreateRepository" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Creates an image repository.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ServerException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidParameterException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryAlreadyExistsException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "LimitExceededException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "CreateRepositoryRequest",
        "xmlNamespace" : null
      },
      "name" : "CreateRepository",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "CreateRepositoryResponse"
      }
    },
    "DeleteRepository" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Deletes an existing image repository. If a repository contains images, you must use the <code>force</code> option to delete it.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ServerException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidParameterException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNotEmptyException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "DeleteRepositoryRequest",
        "xmlNamespace" : null
      },
      "name" : "DeleteRepository",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "DeleteRepositoryResponse"
      }
    },
    "DeleteRepositoryPolicy" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Deletes the repository policy from a specified repository.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ServerException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidParameterException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryPolicyNotFoundException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "DeleteRepositoryPolicyRequest",
        "xmlNamespace" : null
      },
      "name" : "DeleteRepositoryPolicy",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "DeleteRepositoryPolicyResponse"
      }
    },
    "DescribeImages" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Returns metadata about the images in a repository, including image size, image tags, and creation date.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ServerException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidParameterException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ImageNotFoundException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "DescribeImagesRequest",
        "xmlNamespace" : null
      },
      "name" : "DescribeImages",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "DescribeImagesResponse"
      }
    },
    "DescribeRepositories" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Describes image repositories in a registry.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ServerException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidParameterException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNotFoundException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "DescribeRepositoriesRequest",
        "xmlNamespace" : null
      },
      "name" : "DescribeRepositories",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "DescribeRepositoriesResponse"
      }
    },
    "GetAuthorizationToken" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Retrieves a token that is valid for a specified registry for 12 hours. This command allows you to use the <code>docker</code> CLI to push and pull images with Amazon ECR. If you do not specify a registry, the default registry is assumed.</p> <p>The <code>authorizationToken</code> returned for each registry specified is a base64 encoded string that can be decoded and used in a <code>docker login</code> command to authenticate to a registry. The AWS CLI offers an <code>aws ecr get-login</code> command that simplifies the login process.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ServerException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidParameterException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "GetAuthorizationTokenRequest",
        "xmlNamespace" : null
      },
      "name" : "GetAuthorizationToken",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "GetAuthorizationTokenResponse"
      }
    },
    "GetDownloadUrlForLayer" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Retrieves the pre-signed Amazon S3 download URL corresponding to an image layer. You can only get URLs for image layers that are referenced in an image.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ServerException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidParameterException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "LayersNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "LayerInaccessibleException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNotFoundException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "GetDownloadUrlForLayerRequest",
        "xmlNamespace" : null
      },
      "name" : "GetDownloadUrlForLayer",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "GetDownloadUrlForLayerResponse"
      }
    },
    "GetRepositoryPolicy" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Retrieves the repository policy for a specified repository.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ServerException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidParameterException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryPolicyNotFoundException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "GetRepositoryPolicyRequest",
        "xmlNamespace" : null
      },
      "name" : "GetRepositoryPolicy",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "GetRepositoryPolicyResponse"
      }
    },
    "InitiateLayerUpload" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Notify Amazon ECR that you intend to upload an image layer.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ServerException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidParameterException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNotFoundException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "InitiateLayerUploadRequest",
        "xmlNamespace" : null
      },
      "name" : "InitiateLayerUpload",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "InitiateLayerUploadResponse"
      }
    },
    "ListImages" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Lists all the image IDs for a given repository.</p> <p>You can filter images based on whether or not they are tagged by setting the <code>tagStatus</code> parameter to <code>TAGGED</code> or <code>UNTAGGED</code>. For example, you can filter your results to return only <code>UNTAGGED</code> images and then pipe that result to a <a>BatchDeleteImage</a> operation to delete them. Or, you can filter your results to return only <code>TAGGED</code> images to list all of the tags in your repository.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ServerException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidParameterException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNotFoundException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "ListImagesRequest",
        "xmlNamespace" : null
      },
      "name" : "ListImages",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "ListImagesResponse"
      }
    },
    "PutImage" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Creates or updates the image manifest and tags associated with an image.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ServerException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidParameterException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ImageAlreadyExistsException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "LayersNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "LimitExceededException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "PutImageRequest",
        "xmlNamespace" : null
      },
      "name" : "PutImage",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "PutImageResponse"
      }
    },
    "SetRepositoryPolicy" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Applies a repository policy on a specified repository to control access permissions.</p>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ServerException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidParameterException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNotFoundException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "SetRepositoryPolicyRequest",
        "xmlNamespace" : null
      },
      "name" : "SetRepositoryPolicy",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "SetRepositoryPolicyResponse"
      }
    },
    "UploadLayerPart" : {
      "authorizer" : null,
      "authtype" : "IAM",
      "deprecated" : false,
      "documentation" : "<p>Uploads an image layer part to Amazon ECR.</p> <note> <p>This operation is used by the Amazon ECR proxy, and it is not intended for general use by customers for pulling and pushing images. In most cases, you should use the <code>docker</code> CLI to pull, tag, and push images.</p> </note>",
      "errors" : [ {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "ServerException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidParameterException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "InvalidLayerPartException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "RepositoryNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "UploadNotFoundException"
      }, {
        "documentation" : null,
        "error" : null,
        "exception" : false,
        "fault" : false,
        "shape" : "LimitExceededException"
      } ],
      "http" : {
        "method" : "POST",
        "requestUri" : "/",
        "responseCode" : null
      },
      "input" : {
        "documentation" : null,
        "locationName" : null,
        "shape" : "UploadLayerPartRequest",
        "xmlNamespace" : null
      },
      "name" : "UploadLayerPart",
      "output" : {
        "documentation" : null,
        "locationName" : null,
        "resultWrapper" : null,
        "shape" : "UploadLayerPartResponse"
      }
    }
  },
  "shapes" : {
    "Arn" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "AuthorizationData" : {
      "deprecated" : false,
      "documentation" : "<p>An object representing authorization data for an Amazon ECR registry.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "authorizationToken" : {
          "deprecated" : false,
          "documentation" : "<p>A base64-encoded string that contains authorization data for the specified Amazon ECR registry. When the string is decoded, it is presented in the format <code>user:password</code> for private registry authentication using <code>docker login</code>.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Base64",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "expiresAt" : {
          "deprecated" : false,
          "documentation" : "<p>The Unix time in seconds and milliseconds when the authorization token expires. Authorization tokens are valid for 12 hours.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ExpirationTimestamp",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "proxyEndpoint" : {
          "deprecated" : false,
          "documentation" : "<p>The registry URL to use for this authorization token in a <code>docker login</code> command. The Amazon ECR registry URL format is <code>https://aws_account_id.dkr.ecr.region.amazonaws.com</code>. For example, <code>https://012345678910.dkr.ecr.us-east-1.amazonaws.com</code>.. </p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ProxyEndpoint",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "AuthorizationDataList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "AuthorizationData",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "Base64" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : "^\\S+$",
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "BatchCheckLayerAvailabilityRequest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "layerDigests" : {
          "deprecated" : false,
          "documentation" : "<p>The digests of the image layers to check.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "BatchedOperationLayerDigestList",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the image layers to check. If you do not specify a registry, the default registry is assumed.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that is associated with the image layers to check.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName", "layerDigests" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "BatchCheckLayerAvailabilityResponse" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "failures" : {
          "deprecated" : false,
          "documentation" : "<p>Any failures associated with the call.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "LayerFailureList",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "layers" : {
          "deprecated" : false,
          "documentation" : "<p>A list of image layer objects corresponding to the image layer references in the request.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "LayerList",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "BatchDeleteImageRequest" : {
      "deprecated" : false,
      "documentation" : "<p>Deletes specified images within a specified repository. Images are specified with either the <code>imageTag</code> or <code>imageDigest</code>.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "imageIds" : {
          "deprecated" : false,
          "documentation" : "<p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageIdentifierList",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The repository that contains the image to delete.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName", "imageIds" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "BatchDeleteImageResponse" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "failures" : {
          "deprecated" : false,
          "documentation" : "<p>Any failures associated with the call.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageFailureList",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "imageIds" : {
          "deprecated" : false,
          "documentation" : "<p>The image IDs of the deleted images.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageIdentifierList",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "BatchGetImageRequest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "acceptedMediaTypes" : {
          "deprecated" : false,
          "documentation" : "<p>The accepted media types for the request.</p> <p>Valid values: <code>application/vnd.docker.distribution.manifest.v1+json</code> | <code>application/vnd.docker.distribution.manifest.v2+json</code> | <code>application/vnd.oci.image.manifest.v1+json</code> </p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "MediaTypeList",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "imageIds" : {
          "deprecated" : false,
          "documentation" : "<p>A list of image ID references that correspond to images to describe. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageIdentifierList",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the images to describe. If you do not specify a registry, the default registry is assumed.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The repository that contains the images to describe.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName", "imageIds" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "BatchGetImageResponse" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "failures" : {
          "deprecated" : false,
          "documentation" : "<p>Any failures associated with the call.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageFailureList",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "images" : {
          "deprecated" : false,
          "documentation" : "<p>A list of image objects corresponding to the image references in the request.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageList",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "BatchedOperationLayerDigest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 1000,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "BatchedOperationLayerDigestList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 100,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "BatchedOperationLayerDigest",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 1,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "CompleteLayerUploadRequest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "layerDigests" : {
          "deprecated" : false,
          "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "LayerDigestList",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry to which to upload layers. If you do not specify a registry, the default registry is assumed.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to associate with the image layer.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "uploadId" : {
          "deprecated" : false,
          "documentation" : "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the image layer.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "UploadId",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName", "uploadId", "layerDigests" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "CompleteLayerUploadResponse" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "layerDigest" : {
          "deprecated" : false,
          "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "LayerDigest",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The repository name associated with the request.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "uploadId" : {
          "deprecated" : false,
          "documentation" : "<p>The upload ID associated with the layer.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "UploadId",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "CreateRepositoryRequest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name to use for the repository. The repository name may be specified on its own (such as <code>nginx-web-app</code>) or it can be prepended with a namespace to group the repository into a category (such as <code>project-a/nginx-web-app</code>).</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "CreateRepositoryResponse" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "repository" : {
          "deprecated" : false,
          "documentation" : "<p>The repository that was created.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Repository",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "CreationTimestamp" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "timestamp",
      "value" : null,
      "wrapper" : false
    },
    "DeleteRepositoryPolicyRequest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository policy to delete. If you do not specify a registry, the default registry is assumed.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that is associated with the repository policy to delete.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "DeleteRepositoryPolicyResponse" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "policyText" : {
          "deprecated" : false,
          "documentation" : "<p>The JSON repository policy that was deleted from the repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryPolicyText",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The repository name associated with the request.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "DeleteRepositoryRequest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "force" : {
          "deprecated" : false,
          "documentation" : "<p>Force the deletion of the repository if it contains images.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ForceFlag",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository to delete. If you do not specify a registry, the default registry is assumed.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to delete.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "DeleteRepositoryResponse" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "repository" : {
          "deprecated" : false,
          "documentation" : "<p>The repository that was deleted.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Repository",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "DescribeImagesFilter" : {
      "deprecated" : false,
      "documentation" : "<p>An object representing a filter on a <a>DescribeImages</a> operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "tagStatus" : {
          "deprecated" : false,
          "documentation" : "<p>The tag status with which to filter your <a>DescribeImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "TagStatus",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "DescribeImagesRequest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "filter" : {
          "deprecated" : false,
          "documentation" : "<p>The filter key and value with which to filter your <code>DescribeImages</code> results.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "DescribeImagesFilter",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "imageIds" : {
          "deprecated" : false,
          "documentation" : "<p>The list of image IDs for the requested repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageIdentifierList",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "maxResults" : {
          "deprecated" : false,
          "documentation" : "<p>The maximum number of repository results returned by <code>DescribeImages</code> in paginated output. When this parameter is used, <code>DescribeImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "MaxResults",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "nextToken" : {
          "deprecated" : false,
          "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "NextToken",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository in which to describe images. If you do not specify a registry, the default registry is assumed.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "DescribeImagesResponse" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "imageDetails" : {
          "deprecated" : false,
          "documentation" : "<p>A list of <a>ImageDetail</a> objects that contain data about the image.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageDetailList",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "nextToken" : {
          "deprecated" : false,
          "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>DescribeImages</code> request. When the results of a <code>DescribeImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "NextToken",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "DescribeRepositoriesRequest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "maxResults" : {
          "deprecated" : false,
          "documentation" : "<p>The maximum number of repository results returned by <code>DescribeRepositories</code> in paginated output. When this parameter is used, <code>DescribeRepositories</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeRepositories</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>DescribeRepositories</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "MaxResults",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "nextToken" : {
          "deprecated" : false,
          "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeRepositories</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "NextToken",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repositories to be described. If you do not specify a registry, the default registry is assumed.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryNames" : {
          "deprecated" : false,
          "documentation" : "<p>A list of repositories to describe. If this parameter is omitted, then all repositories in a registry are described.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryNameList",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "DescribeRepositoriesResponse" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "nextToken" : {
          "deprecated" : false,
          "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>DescribeRepositories</code> request. When the results of a <code>DescribeRepositories</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "NextToken",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositories" : {
          "deprecated" : false,
          "documentation" : "<p>A list of repository objects corresponding to valid repositories.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryList",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "EmptyUploadException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified layer upload does not contain any layer parts.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "message" : {
          "deprecated" : false,
          "documentation" : "<p>The error message associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ExceptionMessage",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "ExceptionMessage" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "ExpirationTimestamp" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "timestamp",
      "value" : null,
      "wrapper" : false
    },
    "ForceFlag" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "boolean",
      "value" : null,
      "wrapper" : false
    },
    "GetAuthorizationTokenRegistryIdList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 10,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "RegistryId",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 1,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "GetAuthorizationTokenRequest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "registryIds" : {
          "deprecated" : false,
          "documentation" : "<p>A list of AWS account IDs that are associated with the registries for which to get authorization tokens. If you do not specify a registry, the default registry is assumed.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "GetAuthorizationTokenRegistryIdList",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "GetAuthorizationTokenResponse" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "authorizationData" : {
          "deprecated" : false,
          "documentation" : "<p>A list of authorization token data objects that correspond to the <code>registryIds</code> values in the request.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "AuthorizationDataList",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "GetDownloadUrlForLayerRequest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "layerDigest" : {
          "deprecated" : false,
          "documentation" : "<p>The digest of the image layer to download.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "LayerDigest",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the image layer to download. If you do not specify a registry, the default registry is assumed.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that is associated with the image layer to download.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName", "layerDigest" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "GetDownloadUrlForLayerResponse" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "downloadUrl" : {
          "deprecated" : false,
          "documentation" : "<p>The pre-signed Amazon S3 download URL for the requested layer.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Url",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "layerDigest" : {
          "deprecated" : false,
          "documentation" : "<p>The digest of the image layer to download.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "LayerDigest",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "GetRepositoryPolicyRequest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository whose policy you want to retrieve.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "GetRepositoryPolicyResponse" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "policyText" : {
          "deprecated" : false,
          "documentation" : "<p>The JSON repository policy text associated with the repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryPolicyText",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The repository name associated with the request.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "Image" : {
      "deprecated" : false,
      "documentation" : "<p>An object representing an Amazon ECR image.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "imageId" : {
          "deprecated" : false,
          "documentation" : "<p>An object containing the image tag and image digest associated with an image.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageIdentifier",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "imageManifest" : {
          "deprecated" : false,
          "documentation" : "<p>The image manifest associated with the image.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageManifest",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry containing the image.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository associated with the image.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "ImageAlreadyExistsException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified image has already been pushed, and there are no changes to the manifest or image tag since the last push.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "message" : {
          "deprecated" : false,
          "documentation" : "<p>The error message associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ExceptionMessage",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "ImageDetail" : {
      "deprecated" : false,
      "documentation" : "<p>An object that describes an image returned by a <a>DescribeImages</a> operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "imageDigest" : {
          "deprecated" : false,
          "documentation" : "<p>The <code>sha256</code> digest of the image manifest.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageDigest",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "imagePushedAt" : {
          "deprecated" : false,
          "documentation" : "<p>The date and time, expressed in standard JavaScript date format, at which the current image was pushed to the repository. </p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "PushTimestamp",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "imageSizeInBytes" : {
          "deprecated" : false,
          "documentation" : "<p>The size, in bytes, of the image in the repository.</p> <note> <p>Beginning with Docker version 1.9, the Docker client compresses image layers before pushing them to a V2 Docker registry. The output of the <code>docker images</code> command shows the uncompressed image size, so it may return a larger image size than the image sizes returned by <a>DescribeImages</a>.</p> </note>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageSizeInBytes",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "imageTags" : {
          "deprecated" : false,
          "documentation" : "<p>The list of tags associated with this image.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageTagList",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry to which this image belongs.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to which this image belongs.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "ImageDetailList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "ImageDetail",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "ImageDigest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "ImageFailure" : {
      "deprecated" : false,
      "documentation" : "<p>An object representing an Amazon ECR image failure.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "failureCode" : {
          "deprecated" : false,
          "documentation" : "<p>The code associated with the failure.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageFailureCode",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "failureReason" : {
          "deprecated" : false,
          "documentation" : "<p>The reason for the failure.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageFailureReason",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "imageId" : {
          "deprecated" : false,
          "documentation" : "<p>The image ID associated with the failure.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageIdentifier",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "ImageFailureCode" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : [ "InvalidImageDigest", "InvalidImageTag", "ImageTagDoesNotMatchDigest", "ImageNotFound", "MissingDigestAndTag" ],
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "ImageFailureList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "ImageFailure",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "ImageFailureReason" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "ImageIdentifier" : {
      "deprecated" : false,
      "documentation" : "<p>An object with identifying information for an Amazon ECR image.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "imageDigest" : {
          "deprecated" : false,
          "documentation" : "<p>The <code>sha256</code> digest of the image manifest.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageDigest",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "imageTag" : {
          "deprecated" : false,
          "documentation" : "<p>The tag used for the image.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageTag",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "ImageIdentifierList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 100,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "ImageIdentifier",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 1,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "ImageList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "Image",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "ImageManifest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "ImageNotFoundException" : {
      "deprecated" : false,
      "documentation" : "<p>The image requested does not exist in the specified repository.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "message" : {
          "deprecated" : false,
          "documentation" : null,
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ExceptionMessage",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "ImageSizeInBytes" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "long",
      "value" : null,
      "wrapper" : false
    },
    "ImageTag" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "ImageTagList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "ImageTag",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "InitiateLayerUploadRequest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that you intend to upload layers to. If you do not specify a registry, the default registry is assumed.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that you intend to upload layers to.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InitiateLayerUploadResponse" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "partSize" : {
          "deprecated" : false,
          "documentation" : "<p>The size, in bytes, that Amazon ECR expects future layer part uploads to be.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "PartSize",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "uploadId" : {
          "deprecated" : false,
          "documentation" : "<p>The upload ID for the layer upload. This parameter is passed to further <a>UploadLayerPart</a> and <a>CompleteLayerUpload</a> operations.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "UploadId",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidLayerException" : {
      "deprecated" : false,
      "documentation" : "<p>The layer digest calculation performed by Amazon ECR upon receipt of the image layer does not match the digest specified.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "message" : {
          "deprecated" : false,
          "documentation" : "<p>The error message associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ExceptionMessage",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidLayerPartException" : {
      "deprecated" : false,
      "documentation" : "<p>The layer part size is not valid, or the first byte specified is not consecutive to the last byte of a previous layer part upload.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "lastValidByteReceived" : {
          "deprecated" : false,
          "documentation" : "<p>The last valid byte received from the layer part upload that is associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "PartSize",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "message" : {
          "deprecated" : false,
          "documentation" : "<p>The error message associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ExceptionMessage",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The registry ID associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The repository name associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "uploadId" : {
          "deprecated" : false,
          "documentation" : "<p>The upload ID associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "UploadId",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "InvalidParameterException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "message" : {
          "deprecated" : false,
          "documentation" : "<p>The error message associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ExceptionMessage",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "Layer" : {
      "deprecated" : false,
      "documentation" : "<p>An object representing an Amazon ECR image layer.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "layerAvailability" : {
          "deprecated" : false,
          "documentation" : "<p>The availability status of the image layer.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "LayerAvailability",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "layerDigest" : {
          "deprecated" : false,
          "documentation" : "<p>The <code>sha256</code> digest of the image layer.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "LayerDigest",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "layerSize" : {
          "deprecated" : false,
          "documentation" : "<p>The size, in bytes, of the image layer.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "LayerSizeInBytes",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "mediaType" : {
          "deprecated" : false,
          "documentation" : "<p>The media type of the layer, such as <code>application/vnd.docker.image.rootfs.diff.tar.gzip</code> or <code>application/vnd.oci.image.layer.v1.tar+gzip</code>.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "MediaType",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "LayerAlreadyExistsException" : {
      "deprecated" : false,
      "documentation" : "<p>The image layer already exists in the associated repository.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "message" : {
          "deprecated" : false,
          "documentation" : "<p>The error message associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ExceptionMessage",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "LayerAvailability" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : [ "AVAILABLE", "UNAVAILABLE" ],
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "LayerDigest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : "[a-zA-Z0-9-_+.]+:[a-fA-F0-9]+",
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "LayerDigestList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 100,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "LayerDigest",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 1,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "LayerFailure" : {
      "deprecated" : false,
      "documentation" : "<p>An object representing an Amazon ECR image layer failure.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "failureCode" : {
          "deprecated" : false,
          "documentation" : "<p>The failure code associated with the failure.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "LayerFailureCode",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "failureReason" : {
          "deprecated" : false,
          "documentation" : "<p>The reason for the failure.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "LayerFailureReason",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "layerDigest" : {
          "deprecated" : false,
          "documentation" : "<p>The layer digest associated with the failure.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "BatchedOperationLayerDigest",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "LayerFailureCode" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : [ "InvalidLayerDigest", "MissingLayerDigest" ],
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "LayerFailureList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "LayerFailure",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "LayerFailureReason" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "LayerInaccessibleException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified layer is not available because it is not associated with an image. Unassociated image layers may be cleaned up at any time.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "message" : {
          "deprecated" : false,
          "documentation" : "<p>The error message associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ExceptionMessage",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "LayerList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "Layer",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "LayerPartBlob" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "blob",
      "value" : null,
      "wrapper" : false
    },
    "LayerPartTooSmallException" : {
      "deprecated" : false,
      "documentation" : "<p>Layer parts must be at least 5 MiB in size.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "message" : {
          "deprecated" : false,
          "documentation" : "<p>The error message associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ExceptionMessage",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "LayerSizeInBytes" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "long",
      "value" : null,
      "wrapper" : false
    },
    "LayersNotFoundException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified layers could not be found, or the specified layer is not valid for this repository.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "message" : {
          "deprecated" : false,
          "documentation" : "<p>The error message associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ExceptionMessage",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "LimitExceededException" : {
      "deprecated" : false,
      "documentation" : "<p>The operation did not succeed because it would have exceeded a service limit for your account. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonECR/latest/userguide/service_limits.html\">Amazon ECR Default Service Limits</a> in the Amazon EC2 Container Registry User Guide.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "message" : {
          "deprecated" : false,
          "documentation" : "<p>The error message associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ExceptionMessage",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "ListImagesFilter" : {
      "deprecated" : false,
      "documentation" : "<p>An object representing a filter on a <a>ListImages</a> operation.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "tagStatus" : {
          "deprecated" : false,
          "documentation" : "<p>The tag status with which to filter your <a>ListImages</a> results. You can filter results based on whether they are <code>TAGGED</code> or <code>UNTAGGED</code>.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "TagStatus",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "ListImagesRequest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "filter" : {
          "deprecated" : false,
          "documentation" : "<p>The filter key and value with which to filter your <code>ListImages</code> results.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ListImagesFilter",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "maxResults" : {
          "deprecated" : false,
          "documentation" : "<p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "MaxResults",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "nextToken" : {
          "deprecated" : false,
          "documentation" : "<p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "NextToken",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository to list images in. If you do not specify a registry, the default registry is assumed.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The repository whose image IDs are to be listed.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "ListImagesResponse" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "imageIds" : {
          "deprecated" : false,
          "documentation" : "<p>The list of image IDs for the requested repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageIdentifierList",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "nextToken" : {
          "deprecated" : false,
          "documentation" : "<p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "NextToken",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "MaxResults" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 100,
      "member" : null,
      "members" : { },
      "min" : 1,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "integer",
      "value" : null,
      "wrapper" : false
    },
    "MediaType" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : "\\w{1,127}\\/[-+.\\w]{1,127}",
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "MediaTypeList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 100,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "MediaType",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 1,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "NextToken" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "PartSize" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "long",
      "value" : null,
      "wrapper" : false
    },
    "ProxyEndpoint" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "PushTimestamp" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "timestamp",
      "value" : null,
      "wrapper" : false
    },
    "PutImageRequest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "imageManifest" : {
          "deprecated" : false,
          "documentation" : "<p>The image manifest corresponding to the image to be uploaded.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageManifest",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "imageTag" : {
          "deprecated" : false,
          "documentation" : "<p>The tag to associate with the image. This parameter is required for images that use the Docker Image Manifest V2 Schema 2 or OCI formats.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ImageTag",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository in which to put the image. If you do not specify a registry, the default registry is assumed.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository in which to put the image.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName", "imageManifest" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "PutImageResponse" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "image" : {
          "deprecated" : false,
          "documentation" : "<p>Details of the image uploaded.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Image",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RegistryId" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : "[0-9]{12}",
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "Repository" : {
      "deprecated" : false,
      "documentation" : "<p>An object representing a repository.</p>",
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "createdAt" : {
          "deprecated" : false,
          "documentation" : "<p>The date and time, in JavaScript date/time format, when the repository was created.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "CreationTimestamp",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryArn" : {
          "deprecated" : false,
          "documentation" : "<p>The Amazon Resource Name (ARN) that identifies the repository. The ARN contains the <code>arn:aws:ecr</code> namespace, followed by the region of the repository, the AWS account ID of the repository owner, the repository namespace, and then the repository name. For example, <code>arn:aws:ecr:region:012345678910:repository/test</code>.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Arn",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryUri" : {
          "deprecated" : false,
          "documentation" : "<p>The URI for the repository. You can use this URI for Docker <code>push</code> and <code>pull</code> operations.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "Url",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryAlreadyExistsException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified repository already exists in the specified registry.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "message" : {
          "deprecated" : false,
          "documentation" : "<p>The error message associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ExceptionMessage",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "Repository",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryName" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 256,
      "member" : null,
      "members" : { },
      "min" : 2,
      "pattern" : "(?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*",
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryNameList" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 100,
      "member" : {
        "deprecated" : false,
        "documentation" : null,
        "flattened" : false,
        "idempotencyToken" : false,
        "jsonvalue" : false,
        "location" : null,
        "locationName" : null,
        "payload" : false,
        "queryName" : null,
        "shape" : "RepositoryName",
        "streaming" : false,
        "xmlNamespace" : null
      },
      "members" : { },
      "min" : 1,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "list",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryNotEmptyException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified repository contains images. To delete a repository that contains images, you must force the deletion with the <code>force</code> parameter.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "message" : {
          "deprecated" : false,
          "documentation" : "<p>The error message associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ExceptionMessage",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryNotFoundException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified repository could not be found. Check the spelling of the specified repository and ensure that you are performing operations on the correct registry.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "message" : {
          "deprecated" : false,
          "documentation" : "<p>The error message associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ExceptionMessage",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryPolicyNotFoundException" : {
      "deprecated" : false,
      "documentation" : "<p>The specified repository and registry combination does not have an associated repository policy.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "message" : {
          "deprecated" : false,
          "documentation" : "<p>The error message associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ExceptionMessage",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "RepositoryPolicyText" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 10240,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "ServerException" : {
      "deprecated" : false,
      "documentation" : "<p>These errors are usually caused by a server-side issue.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : true,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "message" : {
          "deprecated" : false,
          "documentation" : "<p>The error message associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ExceptionMessage",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "SetRepositoryPolicyRequest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "force" : {
          "deprecated" : false,
          "documentation" : "<p>If the policy you are attempting to set on a repository policy would prevent you from setting another policy in the future, you must force the <a>SetRepositoryPolicy</a> operation. This is intended to prevent accidental repository lock outs.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ForceFlag",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "policyText" : {
          "deprecated" : false,
          "documentation" : "<p>The JSON repository policy text to apply to the repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryPolicyText",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository to receive the policy.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName", "policyText" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "SetRepositoryPolicyResponse" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "policyText" : {
          "deprecated" : false,
          "documentation" : "<p>The JSON repository policy text applied to the repository.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryPolicyText",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The repository name associated with the request.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "TagStatus" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : [ "TAGGED", "UNTAGGED" ],
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "UploadId" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    },
    "UploadLayerPartRequest" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "layerPartBlob" : {
          "deprecated" : false,
          "documentation" : "<p>The base64-encoded layer part payload.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "LayerPartBlob",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "partFirstByte" : {
          "deprecated" : false,
          "documentation" : "<p>The integer value of the first byte of the layer part.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "PartSize",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "partLastByte" : {
          "deprecated" : false,
          "documentation" : "<p>The integer value of the last byte of the layer part.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "PartSize",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The AWS account ID associated with the registry that you are uploading layer parts to. If you do not specify a registry, the default registry is assumed.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The name of the repository that you are uploading layer parts to.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "uploadId" : {
          "deprecated" : false,
          "documentation" : "<p>The upload ID from a previous <a>InitiateLayerUpload</a> operation to associate with the layer part upload.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "UploadId",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : [ "repositoryName", "uploadId", "partFirstByte", "partLastByte", "layerPartBlob" ],
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "UploadLayerPartResponse" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "lastByteReceived" : {
          "deprecated" : false,
          "documentation" : "<p>The integer value of the last byte received in the request.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "PartSize",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "registryId" : {
          "deprecated" : false,
          "documentation" : "<p>The registry ID associated with the request.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RegistryId",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "repositoryName" : {
          "deprecated" : false,
          "documentation" : "<p>The repository name associated with the request.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "RepositoryName",
          "streaming" : false,
          "xmlNamespace" : null
        },
        "uploadId" : {
          "deprecated" : false,
          "documentation" : "<p>The upload ID associated with the request.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "UploadId",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "UploadNotFoundException" : {
      "deprecated" : false,
      "documentation" : "<p>The upload could not be found, or the specified upload id is not valid for this repository.</p>",
      "enum" : null,
      "error" : null,
      "exception" : true,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : {
        "message" : {
          "deprecated" : false,
          "documentation" : "<p>The error message associated with the exception.</p>",
          "flattened" : false,
          "idempotencyToken" : false,
          "jsonvalue" : false,
          "location" : null,
          "locationName" : null,
          "payload" : false,
          "queryName" : null,
          "shape" : "ExceptionMessage",
          "streaming" : false,
          "xmlNamespace" : null
        }
      },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "structure",
      "value" : null,
      "wrapper" : false
    },
    "Url" : {
      "deprecated" : false,
      "documentation" : null,
      "enum" : null,
      "error" : null,
      "exception" : false,
      "fault" : false,
      "flattened" : false,
      "key" : null,
      "max" : 0,
      "member" : null,
      "members" : { },
      "min" : 0,
      "pattern" : null,
      "payload" : null,
      "required" : null,
      "streaming" : false,
      "type" : "string",
      "value" : null,
      "wrapper" : false
    }
  },
  "documentation" : "<p>Amazon EC2 Container Registry (Amazon ECR) is a managed AWS Docker registry service. Customers can use the familiar Docker CLI to push, pull, and manage images. Amazon ECR provides a secure, scalable, and reliable registry. Amazon ECR supports private Docker repositories with resource-based permissions using AWS IAM so that specific users or Amazon EC2 instances can access repositories and images. Developers can use the Docker CLI to author and manage images.</p>"
}